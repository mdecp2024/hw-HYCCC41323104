var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:  ldodwua \n 個人倉儲: https://github.com/mdecp2024/hw-HYCCC41323104 \n 個人網站: https://mdecp2024.github.io/hw-HYCCC41323104/content/index.html \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': 'w7', 'text': '\n', 'tags': '', 'url': 'w7.html'}, {'title': 'w10', 'text': '題目一 : \n \n 題目二 : \n Q1: 請問 Python 程式中有關變數的命名, 除了必須以"_", 以及英文大小寫字母開頭之外, 還有甚麼需要特別注意的地方? \n A1: \n \n 變數名稱必須以字母或底線開頭，後面可以包含字母、數字和底線。 \n 不能使用 Python 保留字和內建函數名稱。 \n 請遵循 PEP 8 的命名風格，選擇具描述性的名稱，避免使用單字符變數。 \n 注意區分大小寫，並避免使用容易混淆的名稱。\xa0 \xa0 \n \n 例子: \n \n 題目三 : \n \n 心得 : 這幾個禮拜學了程式語言之後，才了解了許多不同程式的用法，希望之後可以學會如何打程式。 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11_hw', 'text': '第一題和第二題: \n \n 程式碼一 \n 程式碼二 \n \n \n \n 心得:\n \n \n \n 我覺得最難的是如何跟gpt 溝通得到我想要的程式， 在課堂上的時候一直沒有得到我想要的程式，後來才從gpt 獲得我想要的程式，我先把它傳在email， 然後在複製到個人網站的python ，確定是我希望的圖案和形狀之後，在把程式存在gist（ 記得要把檔案名加上.py），然後儲存好了之後點raw， 會跑出一個網頁，把網頁網址複製， 然後點到自己的個人網站的python ，在網址上加？src=以及剛剛複製的網址， 能成功跑出程式和網址表示成功了！ \n \n \n \n \n \n', 'tags': '', 'url': 'w11_hw.html'}, {'title': 'w12_hw', 'text': '影片: \n \n 程式碼 \n 題目:請各組組員分別利用\xa0 Brython 以及 Jupyter lab \xa0環境, 執行 可攜程式 \xa0notebook 目錄中的\xa0 01_string_input_print.ipynb 至\xa010_for_search.ipynb \xa0筆記本程式, 完成後請將能在 Brython 執行的程式碼存入個人\xa0 Gist \xa0後, 將各程式執行連結放入 w12_hw 網頁上. 最後請說明各範例中所使用的程式語法以及執行心得. \n 第一題:\xa0 \n 01_string_input_print \n what\'s\xa0 your name? \n # 提示使用者輸入名字，並將輸入的名字儲存到變數中\nname = input("What\'s your name?")\n\n# 提示使用者輸入來自的地方，並將輸入的地點儲存到變數中\nlocation = input("Where are you from?") \n 在程式中的input()意思 ? 在 Python 中， input()  是一個內建函數，用來從使用者那裡獲取輸入。它會顯示提示訊息，然後暫停程式的執行，直到使用者輸入一些內容並按下回車鍵。使用者輸入的內容會以字串（ string ）的形式返回。 \n 貓\xa0 \n # 打印第一行：一隻貓的耳朵和臉部上半部\nprint (" /\\_/\\ ")\n# 打印第二行：貓的眼睛和鼻子\nprint (">^.^< ")\n# 打印第三行：貓的嘴巴部分\nprint (" / \\ ")\n# 打印第四行：貓的身體部分，畫出四肢\nprint (" (___)___") #（尾巴的部分也可以理解為向右延伸） \n \n 在程式中的input()意思 ? 在python中， print() 的主要作用是輸出資料到螢幕或其他輸出裝置。這通常用來顯示程式執行過程中的資訊、變數的值，或傳遞訊息給使用者，簡單說用於用於輸出文字、數值或變數的值。 \n 第二題: \n 02_variables \n 填寫名字 \n # 將字串 "Mia" 賦值給變數 first_name\nfirst_name = "Mia"\n\n# 將字串 "Albert" 賦值給變數 last_name\nlast_name = "Albert"\n\n# 輸出變數 first_name 的值（即 "Mia"）\nprint(first_name)\n\n# 輸出變數 last_name 的值（即 "Albert"）\nprint(last_name) \n 你最愛吃甚麼? \n # 使用者輸入名字，將結果儲存到變數 name\nname = input("What\'s your name? ")\n\n# 使用者輸入最喜歡的食物，將結果儲存到變數 favorite_food\nfavorite_food = input("What is your favorite food? ")\n\n# 輸出問候語，包含名字\nprint("Hi! My name is " + name)\n\n# 輸出使用者最喜歡的食物\nprint("My favorite food is " + favorite_food)\n\n# 輸出結合名字和最喜歡食物的句子\nprint(name + "\'s favorite food is " + favorite_food) \n 網頁會跳出問題，問你的名字和最愛吃的食物，可以是中文~ \n 第三題: \n 03_list_if_in_eise \n 身為書店老闆 \n 你有三本書(書庫)分別為" Learn python" ,  "Python for all" ,  "Intro to python"，客人只能選購你擁有的這三本書，所以我們要先詢問要買什麼書，如果要買的書不在這三本(書庫)裡頭，那就會輸出抱歉 的訊息，要的書在這三本書(書庫)裡，就會輸出出Yes! \n # 定義一個包含書名的清單 programming_books\nprogramming_books = ["Learn python", "Python for all", "Intro to python"]\n\n# 輸出整個書籍清單\nprint(programming_books)\n\n# 提示使用者輸入他們想要購買的書名，將結果儲存到變數 wanted_book\nwanted_book = input("Hi! What book would you like to buy? ")\n\n# 輸出使用者輸入的書名\nprint(wanted_book)\n\n# 使用 if 判斷書名是否在書籍清單中\nif wanted_book in programming_books:\n# 如果書名在清單中，輸出確認訊息\nprint("Yes, we sell it!")\nelse:\n# 如果書名不在清單中，輸出抱歉訊息\nprint("Sorry, we don\'t sell that book") \n if  的作用 \n \n 用來檢查條件是否成立（True）。 \n 如果條件成立，執行對應的程式碼。 \n 如果條件不成立，直接跳過。 \n \n else  的作用 \n \n 和  if  搭配使用。 \n 當  if  條件不成立時，執行  else  裡的程式碼。 \n \n \n \n \n', 'tags': '', 'url': 'w12_hw.html'}, {'title': 'w13', 'text': '', 'tags': '', 'url': 'w13.html'}, {'title': 'w13_hw', 'text': '請在下列圖形中的兩個正方形外圍, 以黑色畫筆畫圓, 並設法在各線條所圍成的封閉區域塗上不同顏色. 操作過程請拍攝影片, 並在頁面中列出作業心得. \n \n 圖形的程式碼 \n \n 心得: \n 影片: \n \n from browser import html\nfrom browser import document as doc\nimport math\n\n# 創建一個500x500像素的畫布\ncanvas = html.CANVAS(width=500, height=500)\n\n# 把畫布加入到頁面的div元素中\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\n\n# 獲取畫布的繪圖上下文\nctx = canvas.getContext("2d")\n\n# 設置畫筆寬度\nctx.lineWidth = 4\n\n# 設置混色模式為"screem"，這會讓新畫的顏色與舊顏色進行混合\nctx.globalCompositeOperation = "screem"\n\n# 設置描邊顏色為黑色\nctx.strokeStyle = \'black\'\n\n# 繪製第一個圓形，分為四個顏色\n# 第一個圓段 (Turquoise 顏色)\nctx.beginPath()\nctx.arc(160, 160, 141, 0.25 * math.pi, 0.75 * math.pi)\nctx.fillStyle = "Turquoise"\nctx.fill()\nctx.stroke()\n\n# 第二個圓段 (pink 顏色)\nctx.beginPath()\nctx.arc(160, 160, 141, 0.75 * math.pi, 1.25 * math.pi)\nctx.fillStyle = "pink"\nctx.fill()\nctx.stroke()\n\n# 第三個圓段 (Lavender 顏色)\nctx.beginPath()\nctx.arc(160, 160, 141, 1.25 * math.pi, 1.75 * math.pi)\nctx.fillStyle = "Lavender"\nctx.fill()\nctx.stroke()\n\n# 第四個圓段 (LightCoral 顏色)\nctx.beginPath()\nctx.arc(160, 160, 141, 1.75 * math.pi, 0.25 * math.pi)\nctx.fillStyle = "LightCoral "\nctx.fill()\nctx.stroke()\n\n# 繪製第二個圓形，這個圓形也分為四個顏色\n# 第一個圓段 (BurlyWood 顏色)\nctx.beginPath()\nctx.arc(260, 260, 141, 1.25 * math.pi, 1.75 * math.pi)\nctx.fillStyle = "BurlyWood "\nctx.fill()\nctx.stroke()\n\n# 第二個圓段 (LightSkyBlue 顏色)\nctx.beginPath()\nctx.arc(260, 260, 141, 1.75 * math.pi, 0.25 * math.pi)\nctx.fillStyle = "LightSkyBlue "\nctx.fill()\nctx.stroke()\n\n# 第三個圓段 (LavenderBlush 顏色)\nctx.beginPath()\nctx.arc(260, 260, 141, 0.25 * math.pi, 0.75 * math.pi)\nctx.fillStyle = "LavenderBlush"\nctx.fill()\nctx.stroke()\n\n# 第四個圓段 (PeachPuff 顏色)\nctx.beginPath()\nctx.arc(260, 260, 141, 0.75 * math.pi, 1.25 * math.pi)\nctx.fillStyle = "PeachPuff "\nctx.fill()\nctx.stroke()\n\n# 繪製紅色邊框的三角形，並用不同顏色填充\n# 第一個三角形 (LightSalmon 顏色)\nctx.strokeStyle = \'red\'\nctx.beginPath()\nctx.moveTo(60, 60) # 三角形的起點\nctx.lineTo(60, 260) # 連接到 (60, 260)\nctx.lineTo(260, 260) # 連接到 (260, 260)\nctx.fillStyle = "LightSalmon "\nctx.fill()\nctx.stroke()\n\n# 第二個三角形 (Honeydew 顏色)\nctx.beginPath()\nctx.moveTo(60, 60)\nctx.lineTo(260, 60) # 連接到 (260, 60)\nctx.lineTo(260, 260)\nctx.fillStyle = "Honeydew"\nctx.fill()\nctx.stroke()\n\n# 第三個三角形 (LightBlue 顏色)\nctx.beginPath()\nctx.moveTo(160, 160)\nctx.lineTo(360, 160) # 連接到 (360, 160)\nctx.lineTo(360, 360)\nctx.fillStyle = "LightBlue"\nctx.fill()\nctx.stroke()\n\n# 第四個三角形 (PaleGoldenRod 顏色)\nctx.beginPath()\nctx.moveTo(160, 160)\nctx.lineTo(160, 360) # 連接到 (160, 360)\nctx.lineTo(360, 360)\nctx.fillStyle = "PaleGoldenRod"\nctx.fill()\nctx.stroke()\n\n# 繪製兩個重疊的小矩形\n# 第一個小矩形 (PaleVioletRed 顏色)\nctx.beginPath()\nctx.moveTo(160, 160)\nctx.lineTo(160, 260) # 連接到 (160, 260)\nctx.lineTo(260, 260)\nctx.fillStyle = "PaleVioletRed"\nctx.fill()\nctx.stroke()\n\n# 第二個小矩形 (PaleGreen 顏色)\nctx.beginPath()\nctx.moveTo(160, 160)\nctx.lineTo(260, 160) # 連接到 (260, 160)\nctx.lineTo(260, 260)\nctx.fillStyle = "PaleGreen"\nctx.fill()\nctx.stroke()\n\n# 繪製藍色的斜線\nctx.strokeStyle = \'blue\'\nctx.beginPath()\nctx.moveTo(60, 60) # 斜線起點 (60, 60)\nctx.lineTo(260, 260) # 斜線終點 (260, 260)\nctx.stroke() \n \n \n', 'tags': '', 'url': 'w13_hw.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%)   \xa0 \xa0 \xa0 \xa0 Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):PART 2: Introduction to lists and if/else statementsPART 3: Introduction to the for loop完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'HW 3', 'text': '主題: Python 的數字、演算法與迴圈 (20%) \n \xa0 \xa0 \xa0 \xa0 Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 4 and Part 5完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中. \n \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '\n 每六人為一組進行協同程式練習 \n \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \xa0 \xa0 \xa0 \xa0 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件  \xa0 \xa0 \xa0 \xa0 利用  CoppeliaSim  建立機電模擬系統  \xa0 \xa0 \xa0 \xa0 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n \xa0 \xa0 \xa0 \xa0 範例: \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cd2023_pj3ag4_zmq_football_4.7.7z \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n \n 期末口頭專題報告影片: \n ...... \n \n 期末書面專題報告檔案 (pdf): \n ...... \n \n 電腦輔助設計與實習課程總結心得: \n ...... \n \n 期末報告自評成績:完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.\n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}]};